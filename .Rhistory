carto = "http://a.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png"
leaflet(quakes) %>% addTiles(carto)
shinyApp(ui = ui,server = server)
library(shinythemes)
library(shinydashboardPlus)
install.packages("shinydashboardPlus")
install.packages('leaflet.extras')
library(shinydashboard)
library(shiny)
library(plotly)
library(tidyverse)
library(ggpubr)
library(shinyjs)
library(shinyWidgets)
library(data.table)
library(waiter)
library(ggsci)
library(leaflet)
library(leaflet.extras)
library(shinythemes)
library(shinydashboardPlus)
# directory
gen_dir <- "data/geno_data"
phe_dir <- "data/phe_data"
meta_dir <- "data/meta_data"
# directory
gen_dir <- "example_data/geno_data"
phe_dir <- "example_data/phe_data"
meta_dir <- "example_data/meta_data"
# read data
farms<-c("SHD","GXL","GXH")
farms_title<-list(
SHD="SHD",
`GXL (low IMF line)`="GXL",
`GXH (high IMF line)`="GXH"
)
farms_name<-c("SHD","GXL (low IMF line)","GXH (high IMF line)")
meta_farms<-c("GXL","GXH")
meta_farms_title<-list(
`GXL (low IMF line)`="GXL",
`GXH (high IMF line)`="GXL"
)
meta_farms_name<-c("GXL (low IMF line)","GXH (high IMF line)")
traits<-c("Birth_weight","Day_to_115kg", "Backfat_thickness" ,"Loin_muscle_area", "Lean_percentage")
traits_name<-c("Birth weight", "Days to 115 kg", "Backfat thickness",
"Loin muscle area", "Lean percentage")
traits_title<-list(Birth_weight="Birth weight (kg)",
Day_to_115kg="Days to 115 kg (d)",
Backfat_thickness="Backfat thickness (mm)",
Loin_muscle_area="Loin muscle area (cm<sup>2</sup>)",
Lean_percentage="Lean percentage (%)")
chrs<-paste0("Chr",1:18)
chrs<-paste0("Chr",18)
chrs<-paste0("Chr",18)
gen_size<-map_chr(chrs,function(x){
return(paste0(x,":         ",round(file.info(paste0(gen_dir,"/",x,".wgs.snp.zip"))$size/1024^2,1), "Mb"))
})
gen_size
gen_dir
round(file.info(paste0(gen_dir,"/",chrs,".wgs.snp.zip"))$size/1024^2,1), "Mb")
paste0(gen_dir,"/",chrs,".wgs.snp.zip")
file.info("example_data/geno_data/Chr18.wgs.snp.zip")
file.exists("example_data/geno_data/Chr18.wgs.snp.zip")
setwd("/Users/zhezhang/Desktop/icloud/0-tongbu/1-work/31-microbiome/PHoloDB")
gen_size<-map_chr(chrs,function(x){
return(paste0(x,":         ",round(file.info(paste0(gen_dir,"/",x,".wgs.snp.zip"))$size/1024^2,1), "Mb"))
})
gen_size
## phenotype
phe_files<-c(paste0(phe_dir,"/SHD_phe.csv"),
paste0(phe_dir,"/GXL_phe.csv"),
paste0(phe_dir,"/GXH_phe.csv"))
phe<-map(phe_files,fread)
names(phe)<-farms
head(phe)
map(phe,~head(.x,1000))
a<-map(phe,~head(.x,500))
a
a<-map(phe,~write.csv(head(.x,500),file=paste0(names(.x),"_phe2.csv"),row.names=F,quote=F))
walk(phe,~write.csv(head(.x,500),file=paste0(names(.x),"_phe2.csv"),row.names=F,quote=F))
names(phe[[1]])
names(phe)
walk2(phe,names(phe),~write.csv(head(.x,500),file=paste0(.y,"_phe2.csv"),row.names=F,quote=F))
list.files(meta_dir)
meta_dir
a<-map(list.files("example_data/microbial_data/"),~read.table(.x,h=T,sep="\t"))
a<-map(list.files("example_data/microbial_data/"),~read.table(paste0("example_data/microbial_data/",.x),h=T,sep="\t"))
a<-map(list.files("example_data/microbial_data/"),~read.table(paste0("example_data/microbial_data/",.x),h=T,sep="\t",fill=T))
head(a)
map(a,~head(.x,100))
list.files("example_data/microbial_data/")
### PCA
pca_dat<-read.table(paste0(gen_dir, "/pca_plot.txt"),h=T,sep="\t")
pca_dat$GRP<-factor(pca_dat$GRP,levels=farms)
### sequence summary
gen_seq_sum_tab<-read.table(paste0(gen_dir,"/seq_ind_geno_info.txt"),
h=T,sep="\t")
### SNP distribution file
dist_snp<-read.table(paste0(gen_dir,"/snp_dist.txt"),h=T,sep="\t")
dist_snp$Chromosome<-paste0("Chr",dist_snp$Chromosome)
dist_snp$Chromosome<-factor(dist_snp$Chromosome,levels=chrs)
### sequencing summary
meta_seq_sum_tab<-read.table(paste0(meta_dir,"/summaryBase_meta.txt"),
h=T,sep="\t")
colnames(meta_seq_sum_tab)<-c("ID", "Breed","Line","RawReads", "CleanReads",
"Q20 (%)", "Q30 (%)")
## pylum redundance
phylum_red<-read.table(paste0(meta_dir,"/phylum_red.txt"),h=T,sep="\t")
phylum_legend<-phylum_red %>%
group_by(micro) %>%
summarise(SUM=sum(redundance)) %>%
arrange(desc(SUM)) %>%
select(micro)
phylum_legend<-phylum_legend[['micro']]
phylum_legend<-as.character(phylum_legend)
phylum_legend<-phylum_legend[!phylum_legend=='Others']
phylum_legend<-append(phylum_legend,'Others')
phylum_red$micro<-factor(phylum_red$micro,levels=phylum_legend)
phylum_red$grp<-factor(phylum_red$grp,levels=meta_farms)
## metagenomic pca data
meta_pca_dat<-read.table(paste0(meta_dir, "/pca_plot.txt"),h=T,sep="\t")
meta_pca_dat$Line<-factor(meta_pca_dat$Line,levels=meta_farms)
### Map info
#load("data/mapdata.rData") # China map info with Taiwan
map_info<-read.table("example_data/map_info.txt",h=T,sep="\t") # population map info
### Map info
#load("data/mapdata.rData") # China map info with Taiwan
map_info<-read.table("example_data/map_info.txt",h=T,sep="\t") # population map info
map_info$Lat <- jitter(map_info$Lat, factor = 0.0001)
map_info$Lng <- jitter(map_info$Lng, factor = 0.0001)
rgn<-c(73.60226, 15.77538, 134.77258, 53.56944) # China view region
carto = "http://a.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png"
runApp()
paste0(sum(map_dbl(phe,nrow))," pigs with phenotype")
phe
runApp()
# directory
gen_dir <- "example_data/geno_data"
phe_dir <- "example_data/phe_data"
meta_dir <- "example_data/meta_data"
# read data
farms<-c("SHD","GXL","GXH")
farms_title<-list(
SHD="SHD",
`GXL (low IMF line)`="GXL",
`GXH (high IMF line)`="GXH"
)
farms_name<-c("SHD","GXL (low IMF line)","GXH (high IMF line)")
meta_farms<-c("GXL","GXH")
meta_farms_title<-list(
`GXL (low IMF line)`="GXL",
`GXH (high IMF line)`="GXL"
)
meta_farms_name<-c("GXL (low IMF line)","GXH (high IMF line)")
traits<-c("Birth_weight","Day_to_115kg", "Backfat_thickness" ,"Loin_muscle_area", "Lean_percentage")
traits_name<-c("Birth weight", "Days to 115 kg", "Backfat thickness",
"Loin muscle area", "Lean percentage")
traits_title<-list(Birth_weight="Birth weight (kg)",
Day_to_115kg="Days to 115 kg (d)",
Backfat_thickness="Backfat thickness (mm)",
Loin_muscle_area="Loin muscle area (cm<sup>2</sup>)",
Lean_percentage="Lean percentage (%)")
chrs<-paste0("Chr",18)
gen_size<-map_chr(chrs,function(x){
return(paste0(x,":         ",round(file.info(paste0(gen_dir,"/",x,".wgs.snp.zip"))$size/1024^2,1), "Mb"))
})
## phenotype
phe_files<-c(paste0(phe_dir,"/SHD_phe.csv"),
paste0(phe_dir,"/GXL_phe.csv"),
paste0(phe_dir,"/GXH_phe.csv"))
phe<-map(phe_files,fread)
names(phe)<-farms
## genotype
### sample size
all_geno_info<-read.table(paste0(gen_dir, "/all_ind_geno_info.txt"),
h=T,sep="\t")
all_geno_info$Farm<-factor(all_geno_info$Farm,levels=farms)
all_geno_info$Platform<-factor(all_geno_info$Platform,levels=c('LC','ULC','CHIP'))
### PCA
pca_dat<-read.table(paste0(gen_dir, "/pca_plot.txt"),h=T,sep="\t")
pca_dat$GRP<-factor(pca_dat$GRP,levels=farms)
### sequence summary
gen_seq_sum_tab<-read.table(paste0(gen_dir,"/seq_ind_geno_info.txt"),
h=T,sep="\t")
### SNP distribution file
dist_snp<-read.table(paste0(gen_dir,"/snp_dist.txt"),h=T,sep="\t")
dist_snp$Chromosome<-paste0("Chr",dist_snp$Chromosome)
dist_snp$Chromosome<-factor(dist_snp$Chromosome,levels=chrs)
## Metagenomic data
### sequencing summary
meta_seq_sum_tab<-read.table(paste0(meta_dir,"/summaryBase_meta.txt"),
h=T,sep="\t")
colnames(meta_seq_sum_tab)<-c("ID", "Breed","Line","RawReads", "CleanReads",
"Q20 (%)", "Q30 (%)")
## pylum redundance
phylum_red<-read.table(paste0(meta_dir,"/phylum_red.txt"),h=T,sep="\t")
phylum_legend<-phylum_red %>%
group_by(micro) %>%
summarise(SUM=sum(redundance)) %>%
arrange(desc(SUM)) %>%
select(micro)
phylum_legend<-phylum_legend[['micro']]
phylum_legend<-as.character(phylum_legend)
phylum_legend<-phylum_legend[!phylum_legend=='Others']
phylum_legend<-append(phylum_legend,'Others')
phylum_red$micro<-factor(phylum_red$micro,levels=phylum_legend)
phylum_red$grp<-factor(phylum_red$grp,levels=meta_farms)
## metagenomic pca data
meta_pca_dat<-read.table(paste0(meta_dir, "/pca_plot.txt"),h=T,sep="\t")
meta_pca_dat$Line<-factor(meta_pca_dat$Line,levels=meta_farms)
### Map info
#load("data/mapdata.rData") # China map info with Taiwan
map_info<-read.table("example_data/map_info.txt",h=T,sep="\t") # population map info
map_info$Lat <- jitter(map_info$Lat, factor = 0.0001)
map_info$Lng <- jitter(map_info$Lng, factor = 0.0001)
rgn<-c(73.60226, 15.77538, 134.77258, 53.56944) # China view region
carto = "http://a.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}.png"
paste0(sum(map_dbl(phe,nrow))," pigs with phenotype")
paste0(length(unique(all_geno_info$ID)), " genomes")
# Home panel
homePanel<-tabPanel(
title = "Home",
# Title band
fluidRow(
width=12,
style = "margin-top:-2em",
box(title = "",
height = 230,
background="blue",
width="100%",
htmlOutput("text"),
tags$head(
tags$style("#text{color: white;
text-align:center;
font-size: 50px;
font-style: bold;
position:relative;
top:50px;
font-family: Sans-serif;
}"
)
)
)
),
# inline white space
div(class = "inlay", style = "height:15px;width:100%;background-color:ghostwhite;"),
# Map and info boxes
fluidRow(
column(
width = 11, offset = 1,
fluidRow(
column( width = 8,
# Sasmple distribution map ------------------------------------------------------
box(title = "Samples distribution",
status = "primary",
solidHeader = TRUE,
width = NULL,
leafletOutput("map", height = 410))
),
column( width = 3,
tags$head(tags$style(HTML(".small-box {width:110%}"))),
# valueBox1 ----------------------------------------------------------------
fluidRow(
valueBox("3 different lines",
subtitle="Within 1 pig breed",
icon=icon("map-marker"),
color='red',width=12)
),
# valueBox2 ----------------------------------------------------------------
fluidRow(
valueBox(
paste0(ncol(phe[[1]])-7, " traits"),
subtitle = format(paste0(sum(map_dbl(phe,nrow))," pigs with phenotype"),
big.mark = " ",
scientific = FALSE),
icon = icon("chart-pie"),
color = "yellow",
width = 12
)),
# valueBox3 ----------------------------------------------------------------
fluidRow(
# genotype info box
valueBox(
paste0(length(unique(all_geno_info$ID)), " genomes"),
subtitle = format(paste0(sum(dist_snp$Count)," high-qulity SNPs are available"),
big.mark = " ",
scientific = FALSE),
icon = icon("dna"),
color = "olive",
width = 12
)),
# valueBox4 ----------------------------------------------------------------
fluidRow(
valueBox(
paste0(47, " metagenomes"),
subtitle = "Microbiome down to species level is available",
icon = icon("virus"),
color = "maroon",
width = 12
))
))
)
)
homePanel<-tabPanel(
title = "Home",
# Title band
fluidRow(
width=12,
style = "margin-top:-2em",
box(title = "",
height = 230,
background="blue",
width="100%",
htmlOutput("text"),
tags$head(
tags$style("#text{color: white;
text-align:center;
font-size: 50px;
font-style: bold;
position:relative;
top:50px;
font-family: Sans-serif;
}"
)
)
)
),
# inline white space
div(class = "inlay", style = "height:15px;width:100%;background-color:ghostwhite;"),
# Map and info boxes
fluidRow(
column(
width = 11, offset = 1,
fluidRow(
column( width = 8,
# Sasmple distribution map ------------------------------------------------------
box(title = "Samples distribution",
status = "primary",
solidHeader = TRUE,
width = NULL,
leafletOutput("map", height = 410))
),
column( width = 3,
tags$head(tags$style(HTML(".small-box {width:110%}"))),
# valueBox1 ----------------------------------------------------------------
fluidRow(
valueBox("3 different lines",
subtitle="Within 1 pig breed",
icon=icon("map-marker"),
color='red',width=12)
),
# valueBox2 ----------------------------------------------------------------
fluidRow(
valueBox(
paste0(ncol(phe[[1]])-7, " traits"),
subtitle = format(paste0(sum(map_dbl(phe,nrow))," pigs with phenotype"),
big.mark = " ",
scientific = FALSE),
icon = icon("chart-pie"),
color = "yellow",
width = 12
)),
# valueBox3 ----------------------------------------------------------------
fluidRow(
# genotype info box
valueBox(
paste0(length(unique(all_geno_info$ID)), " genomes"),
subtitle = format(paste0(sum(dist_snp$Count)," high-qulity SNPs are available"),
big.mark = " ",
scientific = FALSE),
icon = icon("dna"),
color = "olive",
width = 12
)),
# valueBox4 ----------------------------------------------------------------
fluidRow(
valueBox(
paste0(47, " metagenomes"),
subtitle = "Microbiome down to species level is available",
icon = icon("virus"),
color = "maroon",
width = 12
))
))
)
)
)
fluidRow(
width=12,
style = "margin-top:-2em",
box(title = "",
height = 230,
background="blue",
width="100%",
htmlOutput("text"),
tags$head(
tags$style("#text{color: white;
text-align:center;
font-size: 50px;
font-style: bold;
position:relative;
top:50px;
font-family: Sans-serif;
}"
)
)
)
)
div(class = "inlay", style = "height:15px;width:100%;background-color:ghostwhite;")
fluidRow(
column(
width = 11, offset = 1,
fluidRow(
column( width = 8,
# Sasmple distribution map ------------------------------------------------------
box(title = "Samples distribution",
status = "primary",
solidHeader = TRUE,
width = NULL,
leafletOutput("map", height = 410))
),
column( width = 3,
tags$head(tags$style(HTML(".small-box {width:110%}"))),
# valueBox1 ----------------------------------------------------------------
fluidRow(
valueBox("3 different lines",
subtitle="Within 1 pig breed",
icon=icon("map-marker"),
color='red',width=12)
),
# valueBox2 ----------------------------------------------------------------
fluidRow(
valueBox(
paste0(ncol(phe[[1]])-7, " traits"),
subtitle = format(paste0(sum(map_dbl(phe,nrow))," pigs with phenotype"),
big.mark = " ",
scientific = FALSE),
icon = icon("chart-pie"),
color = "yellow",
width = 12
)),
# valueBox3 ----------------------------------------------------------------
fluidRow(
# genotype info box
valueBox(
paste0(length(unique(all_geno_info$ID)), " genomes"),
subtitle = format(paste0(sum(dist_snp$Count)," high-qulity SNPs are available"),
big.mark = " ",
scientific = FALSE),
icon = icon("dna"),
color = "olive",
width = 12
)),
# valueBox4 ----------------------------------------------------------------
fluidRow(
valueBox(
paste0(47, " metagenomes"),
subtitle = "Microbiome down to species level is available",
icon = icon("virus"),
color = "maroon",
width = 12
))
))
)
)
fluidRow(
width=12,
style = "margin-top:-2em",
box(title = "",
height = 230,
background="blue",
width="100%",
htmlOutput("text"),
tags$head(
tags$style("#text{color: white;
text-align:center;
font-size: 50px;
font-style: bold;
position:relative;
top:50px;
font-family: Sans-serif;
}"
)
)
)
)
box(title = "",
height = 230,
background="blue",
width="100%",
htmlOutput("text"),
tags$head(
tags$style("#text{color: white;
text-align:center;
font-size: 50px;
font-style: bold;
position:relative;
top:50px;
font-family: Sans-serif;
}"
)
)
)
?box
detach("shinydashboardPlus", unload=TRUE)
detach("package:shinydashboardPlus", unload=TRUE)
detach("package:shinythemes", unload=TRUE)
runApp()
update.packages()
?update.packages()
update.packages(ask=F)
runApp()
